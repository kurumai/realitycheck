version: 2

resource_job_defaults: &resource_job_defaults
  docker:  [{image: 'circleci/ruby:2.4.1'}]
  steps:
    - run:
        name: verify that job ran with the requested resource_class option
        command: |
          curl -k \
          "$CIRCLE_HOSTNAME/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BUILD_NUM?\
          circle-token=$CIRCLE_TOKEN" | \
          jq '.picard.resource_class.class' | grep $CIRCLE_JOB

remote_docker_defaults: &remote_docker_defaults
  docker: [{image: 'docker:17.06-git'}]

basic_docker_build: &basic_docker_build
  name: "Build a really basic docker image"
  command: |
    dockerfile=Dockerfile
    echo "FROM alpine:latest" > $dockerfile
    echo "RUN echo hello" >> $dockerfile
    docker build -f $dockerfile --tag throwaway:$CIRCLE_BUILD_NUM .
    docker run --rm throwaway:$CIRCLE_BUILD_NUM

contexts_defaults: &contexts_defaults
  docker: [{image: 'alpine:latest'}]
  working_directory: /a/contexts/test

workspaces_defaults: &workspaces_defaults
  docker: [{image: 'circleci/node:latest'}]
  working_directory: ~/tmp/workspace

jobs:
  # vm jobs
  machine:
    machine: true
    working_directory: /tmp/workspace/
    steps:
      - run: |
          echo $SLEEP
          date
          sleep $SLEEP
          date
          echo 'Done sleeping.'
      - run:
          echo -e 'export REALITYCHECK_MACHINE=green\n' >> results.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths: .
    environment:
      SLEEP: 1

  remote_docker:
    <<: *remote_docker_defaults
    working_directory: /tmp/workspace/
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: circleci-agent step halt
      - run: which docker
      - run: docker -v
      - setup_remote_docker
      - run:
          <<: *basic_docker_build
      - run: docker version
      - run:
          echo -e 'export REALITYCHECK_REMOTE_DOCKER=green\n' >> results.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths: .

  docker_layer_caching:
    <<: *remote_docker_defaults
    working_directory: /tmp/workspace/
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: circleci-agent step halt
      - run: which docker
      - run: docker -v
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          <<: *basic_docker_build
      - run: docker version
      - run:
          echo -e 'export REALITYCHECK_DOCKER_LAYER_CACHING=green\n' >> results.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths: .

  machine_dlc:
    machine:
      docker_layer_caching: true
    working_directory: /tmp/workspace/
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: circleci-agent step halt
      - run: which docker
      - run: docker -v
      - run:
          <<: *basic_docker_build
      - run: docker version
      - run: exit 1
      - run:
          echo -e 'export REALITYCHECK_MACHINE_DLC=green\n' >> results.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths: .

  vm_jobs_message:
    docker:
      - image: circleci/python
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: check results
          command: |
            if [ -e /tmp/workspace/results.txt ]; then
              source /tmp/workspace/results.txt
            else
              echo "brabrabrabra...."
              exit 1;
            fi
            env

workflows:
  version: 2
  vm_jobs:
    jobs:
      - machine
      - remote_docker:
          requires:
            - machine
      - docker_layer_caching:
          requires:
            - machine
      - machine_dlc:
          requires:
            - machine
      - vm_jobs_message:
          requires:
            - remote_docker
            - docker_layer_caching
            - machine_dlc
            
